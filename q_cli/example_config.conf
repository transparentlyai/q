# Configuration file for q - AI Command Line Assistant
# This is an example configuration file. Copy it to ~/.config/q.conf and modify as needed.

# Configuration variables (in KEY=value format)
# Environment variables can be used with $VAR or ${VAR} syntax

# API keys and credentials for different providers


# Provider and model settings
PROVIDER=anthropic  # Choose from: anthropic, vertexai, groq, openai


# Anthropic Settings
ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}  # Direct API key
ANTHROPIC_MODEL=claude-3-7-sonnet-latest
ANTHROPIC_MAX_TOKENS=8192    # Default limit for Claude models
ANTHROPIC_MAX_CONTEXT_TOKENS=200000    # For Claude models
ANTHROPIC_MAX_TOKENS_PER_MIN=80000       # For Claude models

# VertexAI Settings
# VERTEXAI_API_KEY=/path/to/service-account.json  # Path to service account JSON file
# VERTEXAI_PROJECT=your-google-cloud-project-id  # Required for VertexAI
# VERTEXAI_LOCATION=us-central1  # Required for VertexAI (region where API is deployed)
# VERTEXAI_MODEL=gemini-2.0-flash-001
# VERTEXAI_MAX_TOKENS=65535    # Default limit for Gemini models
# VERTEXAI_MAX_CONTEXT_TOKENS=1000000    # For Gemini models
# VERTEXAI_MAX_TOKENS_PER_MIN=80000      # For Gemini models

# Groq Settings
# GROQ_API_KEY=${GROQ_API_KEY}  # Direct API key
# GROQ_MODEL=deepseek-r1-distill-llama-70b
# GROQ_MAX_TOKENS=8192         # Default limit for Groq-hosted models
# GROQ_MAX_CONTEXT_TOKENS=200000         # For Groq-hosted models
# GROQ_MAX_TOKENS_PER_MIN=80000          # For Groq-hosted models

# OpenAI Settings
# OPENAI_API_KEY=${OPENAI_API_KEY}  # Direct API key
# OPENAI_MODEL=gpt-4o-mini
# OPENAI_MAX_TOKENS=8192       # Default limit for GPT models
# OPENAI_MAX_CONTEXT_TOKENS=200000       # For GPT models
# OPENAI_MAX_TOKENS_PER_MIN=80000        # For GPT models

# Command permission settings
# Command lists must be specified in JSON array format
# IMPORTANT: JSON arrays must be on a single line
# Note: These are ADDED to the default values, not replacements

# Commands in this list will be executed without asking for permission
# Add commands you frequently use and trust here
ALWAYS_APPROVED_COMMANDS=[]

# Commands in this list will always require explicit permission before execution
# Add potentially dangerous commands here that you still want to be able to run
ALWAYS_RESTRICTED_COMMANDS=[]

# Commands in this list will never be allowed to execute
# Add commands that are too dangerous to run in your environment
PROHIBITED_COMMANDS=[]

# Optional context section - everything after #CONTEXT is sent with every query
# Environment variables are also expanded in the context section
#CONTEXT
- My name is User
- The environment is Linux
- Be brief unless asked otherwise
- My home directory is $HOME
